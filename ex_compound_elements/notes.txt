NOTES 

Instead of just passing event on click to separate functions, consider one function 
that handles click on multiple elements and pass a unique argument, 
as in onclick="babyClicked('baby')" which works to pass string 'baby' 

And you can pass multiple arguments, e.g., onclick="babyClicked(event,'baby')" 

CLICK CAPTURE AND PASSING ---------- 

A mouse click affects both an element and its parent div, 
and each can have onclick attributes. 
Such clicks are not passed down in z-level to lower divs and elements.

For a child div in a mother div and click on child div, the child gets click first with
event id of the child, then the mother div also gets the click with event id also that of child
and also the modKey (getModifierState) of the child

For a baby div in a child div that is in a mother div and click on baby div, the baby gets click first with
event id of the baby, then the child and then the mother div also gets the click, both with event id also that of baby
and also the modKey (getModifierState) of the baby

For both cases of the two paragraphs above, each of the nested div's get the top event but each div's 
onclick function can have a unique argument listed in the div attributes passed to it. For example,
in onclick="childClicked(event,'child')" in child div, when click is on baby div nested inside child,
the child onclick gets the same event value as the baby but 'child' is passed to childClicked() function. 

A hidden div gets no clicks unless it contains a visible element, in which case 
the hidden div and its visible element both get the click 

A hidden div on top layer (z-level) passes clicks down, unless the click is on a visible element in 
that hidden div, 
in which case the hidden div and its visible element both get the click, which is then 
NOT passed down in z-level. 

Using the createElement+appendChild method of adding new elements to a page, 
you can create multiple new divs with the same name if you wish,
e.g.,   const newD = document.createElement("div");
            newD.innerHTML = '<button>new button</button>';
            document.body.appendChild(newD);

The other method of adding new elements to a page is appending to an existing div, e.g., 
 document.getElementById("div_outerdiv").innerHTML += '<button>new button</button>'; 


--------------- 

  // // A COUPLE WAYS TO ADD NEW ELEMENT

  // if (modkey) {
  //   document.getElementById("div_outerdiv").
  //     innerHTML += '<button type="button" id="button_newOne" onclick="newOneClicked(event)">newOne</button>';
  // }

  // if (modkey) {
  //   const newD = document.createElement("div");
  //           newD.innerText = "Hello World";
  //           document.body.appendChild(newD);
  // }

  // if (modkey) {
  //   const newD = document.createElement("div");
  //           newD.innerHTML = '<button type="button" id="button_newerOne" onclick="newerOneClicked(event)">newerOne</button>';
  //           document.body.appendChild(newD);
  // }

  